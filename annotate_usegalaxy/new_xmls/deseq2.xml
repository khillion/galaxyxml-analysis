<tool id="deseq2" name="DESeq2" version="2.11.39">
  <!--This tool descriptor has been annotated by ToolDog v0.3.1-->
  <description>Determines differentially expressed features from count tables</description>
  <edam_operations>
    <edam_operation>operation_3223</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_3308</edam_topic>
  </edam_topics>
  <requirements>
    <requirement type="package" version="1.14.1">bioconductor-deseq2</requirement>
    <requirement type="package" version="1.20.0">r-getopt</requirement>
  </requirements>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command>
    
        echo $(R --version | grep version | grep -v GNU)", DESeq2 version" $(R --vanilla --slave -e "library(DESeq2); cat(sessionInfo()\$otherPkgs\$DESeq2\$Version)" 2&gt; /dev/null | grep -v -i "WARNING: ")
    
    </version_command>
  <command><![CDATA[
    
        #if $tximport.tximport_selector == 'tximport':
            #if $tximport.mapping_format.mapping_format_selector == 'gtf':
                ln -s '$tximport.mapping_format.gtf_file' mapping.gtf &&
            #else:
                ln -s '$tximport.mapping_format.tabular_file' mapping.txt &&
            #end if
        #end if

        #import json
        Rscript '${__tool_directory__}/deseq2.R'
            -o '$deseq_out'
            #if $pdf:
                -p '$plots'
            #end if
            #if $normCounts:
                -n '$counts_out'
            #end if
            #set $temp_factor_names = list()
            #for $factor in $rep_factorName:
                #set $temp_factor = list()
                #for $level in $factor.rep_factorLevel:
                    #set $count_files = list()
                    #for $file in $level.countsFile:
                        $count_files.append(str($file))
                    #end for
                    $temp_factor.append( {str($level.factorLevel): $count_files} )
                #end for
                $temp_factor.reverse()
                $temp_factor_names.append([str($factor.factorName), $temp_factor])
            #end for
            -f '#echo json.dumps(temp_factor_names)#'
            -t '$fit_type'
            #if $outlier_replace_off:
                -a
            #end if
            #if $outlier_filter_off:
                -b
            #end if
            #if $auto_mean_filter_off:
                -c
            #end if
            #if $many_contrasts:
                -m
            #end if
            #if $tximport.tximport_selector == 'tximport':
                -i
                #if $tximport.mapping_format.mapping_format_selector == 'gtf':
                    -x mapping.gtf
                #else:
                    -x mapping.txt
                #end if

            #end if
    
    ]]></command>
  <inputs>
    <repeat min="1" name="rep_factorName" title="Factor">
      <param area="false" argument="factorName" help="Only letters, numbers and underscores will be retained in this field" label="Specify a factor name, e.g. effects_drug_x or cancer_markers" name="factorName" type="text" value="FactorName"/>
      <repeat default="2" min="2" name="rep_factorLevel" title="Factor level">
        <param area="false" argument="factorLevel" help="Only letters, numbers and underscores will be retained in this field" label="Specify a factor level, typical values could be 'tumor', 'normal', 'treated' or 'control'" name="factorLevel" type="text" value="FactorLevel"/>
        <param argument="countsFile" format="tabular" label="Counts file(s)" multiple="true" name="countsFile" type="data"/>
      </repeat>
    </repeat>
    <conditional argument="tximport" label="Author did not provide help for this parameter... " name="tximport">
      <param argument="tximport_selector" label="Choice of Input data" name="tximport_selector" type="select">
        <option selected="true" value="count">Count data (e.g. from htseq-count or feature-count)</option>
        <option value="tximport">TPM values (e.g. from sailfish or salmon)</option>
      </param>
      <when value="tximport">
        <conditional argument="mapping_format" label="Author did not provide help for this parameter... " name="mapping_format">
          <param argument="mapping_format_selector" label="Gene mapping format" name="mapping_format_selector" type="select">
            <option selected="true" value="gtf">GTF</option>
            <option value="tabular">Transcript-ID and Gene-ID mapping file</option>
          </param>
          <when value="gtf">
            <param argument="gtf_file" format="gtf" label="GTF file with Transcript - Gene mapping" name="gtf_file" type="data"/>
          </when>
          <when value="tabular">
            <param argument="tabular_file" format="tabular" label="Tabular file with Transcript - Gene mapping" name="tabular_file" type="data"/>
          </when>
        </conditional>
      </when>
      <when value="count"/>
    </conditional>
    <param argument="pdf" checked="true" falsevalue="0" help="output an additional PDF files" label="Visualising the analysis results" name="pdf" truevalue="1" type="boolean"/>
    <param argument="normCounts" checked="false" falsevalue="0" label="Output normalized counts table" name="normCounts" truevalue="1" type="boolean"/>
    <param argument="many_contrasts" checked="false" falsevalue="0" help=" DESeq2 performs independent &#64257;ltering by default using the mean of normalized counts as a &#64257;lter statistic" label="Output all levels vs all levels of primary factor (use when you have &gt;2 levels for primary factor)" name="many_contrasts" truevalue="1" type="boolean"/>
    <param argument="fit_type" label="Fit type" name="fit_type" type="select">
      <option selected="true" value="1">parametric</option>
      <option value="2">local</option>
      <option value="3">mean</option>
    </param>
    <param argument="outlier_replace_off" checked="false" falsevalue="0" help="When there are more than 6 replicates for a given sample, the DESeq2 will automatically replace                 counts with large Cook&#8217;s distance with the trimmed mean over all samples, scaled up by the size factor                 or normalization factor for that sample" label="Turn off outliers replacement (only affects with &gt;6 replicates)" name="outlier_replace_off" truevalue="1" type="boolean"/>
    <param argument="outlier_filter_off" checked="false" falsevalue="0" help="When there are more than 2 replicates for a given sample, the DESeq2 will automatically                 filter genes which contain a Cook&#8217;s distance above a cuto&#64256;" label="Turn off outliers filtering (only affects with &gt;2 replicates)" name="outlier_filter_off" truevalue="1" type="boolean"/>
    <param argument="auto_mean_filter_off" checked="false" falsevalue="0" help=" DESeq2 performs independent &#64257;ltering by default using the mean of normalized counts as a &#64257;lter statistic" label="Turn off independent filtering" name="auto_mean_filter_off" truevalue="1" type="boolean"/>
  </inputs>
  <outputs>
    <data format="tabular" hidden="false" label="DESeq2 result file on ${on_string}" name="deseq_out">
      <filter>many_contrasts is False</filter>
    </data>
    <collection label="DESeq2 result files on ${on_string}" name="split_output" type="list">
      <filter>many_contrasts is True</filter>
      <discover_datasets directory="." format="tabular" pattern="None.(?P&lt;designation&gt;.+_vs_.+)" visible="false"/>
    </collection>
    <data format="pdf" hidden="false" label="DESeq2 plots on ${on_string}" name="plots">
      <filter>pdf == True</filter>
    </data>
    <data format="tabular" hidden="false" label="Normalized counts file on ${on_string}" name="counts_out">
      <filter>normCounts == True</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="pdf" value="False"/>
      <param name="normCounts" value="True"/>
      <output file="normalized_readcounts.tab" name="counts_out"/>
      <output file="deseq2_out.tab" name="deseq_out"/>
    </test>
    <test>
      <param name="pdf" value="False"/>
      <param name="tximport_selector" value="tximport"/>
      <param name="mapping_format_selector" value="gtf"/>
      <param name="gtf_file" value="genes_sub.gtf"/>
      <output file="deseq2_tximport_out.tab" name="deseq_out"/>
    </test>
  </tests>
  <help><![CDATA[

.. class:: infomark

**What it does**

Estimate variance-mean dependence in count data from high-throughput sequencing assays and test for differential expression based on a model using the negative binomial distribution

**Inputs**

DESeq2_ takes count tables that generated from the htseq-count as input. Count tables must be generated for each sample individually. DESeq2 is capable of handling multiple factors that effect your experiment. The first factor you input is considered as the primary factor that affects gene expressions. You also input several secondary factors that might influence your experiment. But the final output will be changes in genes due to primary factor in presence of secondary factors. Each factor has two levels/states. You need to select appropriate count table from your history for each factor level.

The following table gives some examples of factors and their levels:

========= ============== ===============
Factor    Factor level 1 Factor level 2
--------- -------------- ---------------
Treatment Treated        Untreated
--------- -------------- ---------------
Condition Knockdown      Wildtype
--------- -------------- ---------------
TimePoint Day4           Day1
--------- -------------- ---------------
SeqType   SingleEnd      PairedEnd
--------- -------------- ---------------
Gender    Female         Male
========= ============== ===============

*Note*: Output log2 fold changes are based on primary factor level 1 vs. factor level2. Here the order of factor levels is important. For example, for the factor 'Treatment' given in above table, DESeq2 computes fold changes of 'Treated' samples against 'Untreated', i.e. the values correspond to up or down regulations of genes in Treated samples.

**Output**

DESeq2_ generates a tabular file containing the different columns and optional visualized results as PDF.

====== ==========================================================
Column Description
------ ----------------------------------------------------------
     1 Gene Identifiers
     2 mean normalised counts, averaged over all samples from both conditions
     3 the logarithm (to basis 2) of the fold change (See the note in inputs section)
     4 standard error estimate for the log2 fold change estimate
     5 Wald statistic
     6 p value for the statistical significance of this change
     7 p value adjusted for multiple testing with the Benjamini-Hochberg procedure
       which controls false discovery rate (FDR)
====== ==========================================================

.. _DESeq2: http://master.bioconductor.org/packages/release/bioc/html/DESeq2.html

    ]]></help>
  <citations>
    <citation type="doi">10.1186/s13059-014-0550-8</citation>
  </citations>
</tool>
